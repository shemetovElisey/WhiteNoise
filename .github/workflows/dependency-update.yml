name: Dependency Update

on:
  schedule:
    - cron: '0 4 * * 1' # Every Monday at 4 AM
  workflow_dispatch:

jobs:
  update-dependencies:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Update Swift Package Manager dependencies
      run: |
        # Update all dependencies
        xcodebuild -resolvePackageDependencies \
          -project WhiteNoise.xcodeproj \
          -scheme WhiteNoise
          
    - name: Check for updates
      id: check-updates
      run: |
        # Check if there are any changes
        if git diff --quiet Package.resolved; then
          echo "no_updates=true" >> $GITHUB_OUTPUT
          echo "No dependency updates found"
        else
          echo "no_updates=false" >> $GITHUB_OUTPUT
          echo "Dependency updates found"
        fi
        
    - name: Build with updated dependencies
      if: steps.check-updates.outputs.no_updates == 'false'
      run: |
        xcodebuild clean build \
          -project WhiteNoise.xcodeproj \
          -scheme WhiteNoise \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Test with updated dependencies
      if: steps.check-updates.outputs.no_updates == 'false'
      run: |
        xcodebuild test \
          -project WhiteNoise.xcodeproj \
          -scheme WhiteNoise \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
          -derivedDataPath ~/Library/Developer/Xcode/DerivedData \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Commit dependency updates
      if: steps.check-updates.outputs.no_updates == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Package.resolved
        git commit -m "chore: update Swift Package Manager dependencies" -m "Auto-updated dependencies via GitHub Actions"
        
    - name: Create Pull Request
      if: steps.check-updates.outputs.no_updates == 'false'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: dependency-update-${{ github.run_id }}
        title: "chore: update dependencies"
        body: |
          ## üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
          
          –≠—Ç–æ—Ç PR —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Swift Package Manager.
          
          ### –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:
          - –û–±–Ω–æ–≤–ª–µ–Ω—ã –≤–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–æ–≤ –≤ `Package.resolved`
          
          ### –ü—Ä–æ–≤–µ—Ä–∫–∏:
          - ‚úÖ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
          - ‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ
          
          ### –î–µ–π—Å—Ç–≤–∏—è:
          - [ ] –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö
          - [ ] –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
          - [ ] –û–¥–æ–±—Ä–∏—Ç—å –∏ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å
        commit-message: "chore: update dependencies"
        delete-branch: true