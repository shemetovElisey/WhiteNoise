#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π Whisper
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–æ–¥–µ–ª–∏ Whisper

set -e

echo "üéØ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π Whisper"
echo "=========================="

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–æ–¥–µ–ª–µ–π
MODELS_DIR="$HOME/Documents/whisper-models"
mkdir -p "$MODELS_DIR"

echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–¥–µ–ª–µ–π: $MODELS_DIR"

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
declare -A MODELS=(
    ["ggml-tiny.bin"]="https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-tiny.bin"
    ["ggml-base.bin"]="https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-base.bin"
    ["ggml-small.bin"]="https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-small.bin"
    ["ggml-medium.bin"]="https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-medium.bin"
    ["ggml-large.bin"]="https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-large.bin"
    ["ggml-large-v2.bin"]="https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-large-v2.bin"
    ["ggml-large-v3.bin"]="https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-large-v3.bin"
)

# –†–∞–∑–º–µ—Ä—ã –º–æ–¥–µ–ª–µ–π (–≤ –±–∞–π—Ç–∞—Ö)
declare -A SIZES=(
    ["ggml-tiny.bin"]="40960000"
    ["ggml-base.bin"]="77600000"
    ["ggml-small.bin"]="256000000"
    ["ggml-medium.bin"]="806000000"
    ["ggml-large.bin"]="1625000000"
    ["ggml-large-v2.bin"]="1625000000"
    ["ggml-large-v3.bin"]="1625000000"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
format_size() {
    local bytes=$1
    if [ $bytes -gt 1073741824 ]; then
        echo "$(echo "scale=1; $bytes/1073741824" | bc) GB"
    elif [ $bytes -gt 1048576 ]; then
        echo "$(echo "scale=1; $bytes/1048576" | bc) MB"
    else
        echo "$(echo "scale=1; $bytes/1024" | bc) KB"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
download_model() {
    local model_name=$1
    local url=$2
    local model_path="$MODELS_DIR/$model_name"
    local expected_size=${SIZES[$model_name]}
    
    echo ""
    echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º $model_name..."
    echo "   URL: $url"
    echo "   –†–∞–∑–º–µ—Ä: $(format_size $expected_size)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ñ–∞–π–ª
    if [ -f "$model_path" ]; then
        local actual_size=$(stat -f%z "$model_path" 2>/dev/null || stat -c%s "$model_path" 2>/dev/null)
        if [ "$actual_size" = "$expected_size" ]; then
            echo "   ‚úÖ –ú–æ–¥–µ–ª—å —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
            return 0
        else
            echo "   ‚ö†Ô∏è  –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ —Ä–∞–∑–º–µ—Ä –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º..."
            rm -f "$model_path"
        fi
    fi
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
    if curl -L -o "$model_path" "$url"; then
        local actual_size=$(stat -f%z "$model_path" 2>/dev/null || stat -c%s "$model_path" 2>/dev/null)
        if [ "$actual_size" = "$expected_size" ]; then
            echo "   ‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
            return 0
        else
            echo "   ‚ùå –û—à–∏–±–∫–∞: —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"
            echo "      –û–∂–∏–¥–∞–ª–æ—Å—å: $expected_size –±–∞–π—Ç"
            echo "      –ü–æ–ª—É—á–µ–Ω–æ: $actual_size –±–∞–π—Ç"
            rm -f "$model_path"
            return 1
        fi
    else
        echo "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏"
        rm -f "$model_path"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
if [ $# -eq 0 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [tiny|base|small|medium|large|large-v2|large-v3|all]"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
    echo "  tiny      - 39 MB, –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ, —Ö–æ—Ä–æ—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å"
    echo "  base      - 74 MB, –±—ã—Å—Ç—Ä–æ, –ª—É—á—à–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å"
    echo "  small     - 244 MB, —Å—Ä–µ–¥–Ω–µ, –æ—Ç–ª–∏—á–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å"
    echo "  medium    - 769 MB, –º–µ–¥–ª–µ–Ω–Ω–æ, –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å"
    echo "  large     - 1550 MB, –æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å"
    echo "  large-v2  - 1550 MB, —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è large"
    echo "  large-v3  - 1550 MB, –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è large"
    echo "  all       - –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –º–æ–¥–µ–ª–∏"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 tiny          # –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ tiny –º–æ–¥–µ–ª—å"
    echo "  $0 base small    # –ó–∞–≥—Ä—É–∑–∏—Ç—å base –∏ small –º–æ–¥–µ–ª–∏"
    echo "  $0 all           # –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –º–æ–¥–µ–ª–∏"
    exit 1
fi

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
models_to_download=()
for arg in "$@"; do
    case $arg in
        "tiny")
            models_to_download+=("ggml-tiny.bin")
            ;;
        "base")
            models_to_download+=("ggml-base.bin")
            ;;
        "small")
            models_to_download+=("ggml-small.bin")
            ;;
        "medium")
            models_to_download+=("ggml-medium.bin")
            ;;
        "large")
            models_to_download+=("ggml-large.bin")
            ;;
        "large-v2")
            models_to_download+=("ggml-large-v2.bin")
            ;;
        "large-v3")
            models_to_download+=("ggml-large-v3.bin")
            ;;
        "all")
            models_to_download=("${!MODELS[@]}")
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å: $arg"
            exit 1
            ;;
    esac
done

# –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
echo ""
echo "üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º ${#models_to_download[@]} –º–æ–¥–µ–ª—å(–µ–π)..."
echo ""

success_count=0
total_count=${#models_to_download[@]}

for model in "${models_to_download[@]}"; do
    if download_model "$model" "${MODELS[$model]}"; then
        ((success_count++))
    fi
done

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:"
echo "   ‚úÖ –£—Å–ø–µ—à–Ω–æ: $success_count/$total_count"
echo "   ‚ùå –û—à–∏–±–æ–∫: $((total_count - success_count))"

if [ $success_count -eq $total_count ]; then
    echo ""
    echo "üéâ –í—Å–µ –º–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!"
    echo ""
    echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WhiteNoise"
    echo "   2. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (Cmd+,)"
    echo "   3. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –º–æ–¥–µ–ª—å"
    echo "   4. –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ (Cmd+Shift+V)"
else
    echo ""
    echo "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥–µ–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å."
    echo "   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏."
fi

echo ""
echo "üìÅ –ú–æ–¥–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: $MODELS_DIR" 